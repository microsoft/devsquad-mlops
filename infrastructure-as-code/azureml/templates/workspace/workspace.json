{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning workspace."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[replace(parameters('workspaceName'),'-', '')]",
            "metadata": {
                "description": "Name of the storage account used for the workspace."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ]
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[replace(parameters('workspaceName'), 'mlw', 'kv')]"
        },
        "applicationInsightsName": {
            "type": "string",
            "defaultValue": "[replace(parameters('workspaceName'), 'mlw', 'log')]"
        },
        "containerRegistryName": {
            "type": "string",
            "defaultValue": "[replace(parameters('workspaceName'),'-', '')]",
            "metadata": {
                "description": "The container registry resource id if you want to create a link to the workspace."
            }
        },
        "servicePrincipalObjectId": {
            "type": "string",
            "metadata": {
                "description": "Service principal Object ID to assign automation permissions on."
            }
        },
        "confidential_data": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "Specifies that the Azure Machine Learning workspace holds highly confidential data."
            }
        },
        "encryption_status": {
            "type": "string",
            "defaultValue": "Disabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Specifies if the Azure Machine Learning workspace should be encrypted with customer managed key."
            }
        },
        "cmk_keyvault": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the customer managed keyVault arm id."
            }
        },
        "resource_cmk_uri": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies if the customer managed keyvault key uri."
            }
        },
        "tagValues": {
            "type": "object"
        }
    },
    "variables": {
        "tenantId": "[subscription().tenantId]",
        "storageAccount": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "keyVault": "[resourceId(parameters('resourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "applicationInsights": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Insights/components', parameters('applicationInsightsName'))]",
        "containerRegistry": "[resourceId(parameters('resourceGroupName'), 'Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
            },
            "tags": "[parameters('tagValues')]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[variables('tenantId')]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "enableRbacAuthorization": true,
                "accessPolicies": []
            },
            "tags": "[parameters('tagValues')]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
            "name": "[guid('Azure Role Key Vault Administrator', parameters('servicePrincipalObjectId'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
            "properties": {
              "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]", 
              "principalId": "[parameters('servicePrincipalObjectId')]",
              "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[variables('keyVault')]"
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            },
            "tags": "[parameters('tagValues')]"
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "name": "[parameters('containerRegistryName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "adminUserEnabled": true
            },
            "tags": "[parameters('tagValues')]"
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccount')]",
                "[variables('keyVault')]",
                "[variables('applicationInsights')]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "sku": {
                "tier": "standard",
                "name": "standard"
            },
            "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "storageAccount": "[variables('storageAccount')]",
                "keyVault": "[variables('keyVault')]",
                "applicationInsights": "[variables('applicationInsights')]",
                "containerRegistry": "[if(empty(parameters('containerRegistryName')), json('null'), variables('containerRegistry'))]",
                "encryption": {
                    "status": "[parameters('encryption_status')]",
                    "keyVaultProperties": {
                        "keyVaultArmId": "[parameters('cmk_keyvault')]",
                        "keyIdentifier": "[parameters('resource_cmk_uri')]"
                    }
                },
                "hbiWorkspace": "[parameters('confidential_data')]"
            },
            "tags": "[parameters('tagValues')]"
        }
    ]
}