parameters:
- name: componentSupport
  type: boolean
  default: false
- name: minVersion
  type: string
  default: '2.0'
- name: pythonTools
  type: boolean
  default: false
- name: pythonVersion
  type: string
  default: '3.8'

steps:
  - ${{ if eq(parameters.pythonTools, true) }}:
    - task: UsePythonVersion@0
      displayName: Configuring Python ${{ parameters.pythonVersion }}
      inputs:
        versionSpec: ${{ parameters.pythonVersion }}

    - task: Bash@3
      displayName: Installing Python tools
      inputs:
        targetType: inline
        script: |
          pip install -r .azure-pipelines/templates/aml-cli-install/requirements.txt

  - task: Bash@3
    displayName: Installing Azure CLI
    inputs:
      targetType: inline
      script: |
        echo "##[debug]Installing Azure CLI"
        if [ -x "$(command -v az)" ]; then
          echo "##[debug]Azure CLI is already installed"
        else
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        fi

  - task: Bash@3
    displayName: Installing Azure ML CLI
    inputs:
      targetType: inline
      script: |
        if ${{ parameters.componentSupport }}; then
          echo "##[debug]Installing azure-cli-ml extension with components support"
          
          if [[ $(az extension show --name azure-cli-ml) ]]; then
            echo "##[debug]azure-cli-ml extension is already installed."
          else
            echo "##[debug]Adding extension from a preview build. This is experimental."
            az extension add --source https://azuremlsdktestpypi.blob.core.windows.net/wheels/componentsdk/azure_cli_ml-0.9.1-py3-none-any.whl --pip-extra-index-urls https://azuremlsdktestpypi.azureedge.net/componentsdk/0.9.1 --yes --verbose
          fi
        else
          echo "##[debug]Installing azure-cli-ml extension version ${{ parameters.minVersion }}"

          if [[ $(az extension show --name ml) ]]; then
            echo "##[debug]azure-cli-ml extension is already installed."
            
            if [[ $(az extension show --name ml | jq -r .version) < "${{ parameters.minVersion }}" ]]; then
              echo "##[debug]Updating version to ${{ parameters.minVersion }}."
              az extension update -n ml
            fi
          else
            echo "##[debug]Adding extension"
            az extension add -n ml -y
          fi
        fi
  
  - task: Bash@3
    displayName: Installing tools
    inputs:
      targetType: inline
      script: |
        sudo apt install jq
        pip install yq