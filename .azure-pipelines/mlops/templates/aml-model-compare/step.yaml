parameters:
  - name: azureServiceConnectionName
    type: string
  - name: modelName
    type: string
  - name: champion
    type: string
  - name: challenger
    type: string
    default: latest
  - name: endpoint
    type: string
    default: 
  - name: deployment
    type: string
    default:
  - name: compareBy
    type: string
    default: accuracy
  - name: greaterIsBetter
    type: boolean
    default: true
  - name: workspaceName
    type: string
    default: 
  - name: resourceGroup
    type: string
    default:

steps:
  - task: AzureCLI@2
    name: compare
    displayName: Comparing model
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      azureSubscription: ${{ parameters.azureServiceConnectionName }}
      inlineScript: |
        if [[ "${{ parameters.champion }}" == "current" ]]; then
          echo "##[debug]Resolving current champion version from endpoint"
          ENDPOINT_NAME=$(yq -r ".name" ${{ parameters.endpoint }})
          
          if [[ $(az ml online-endpoint show -n $ENDPOINT_NAME -g ${{ parameters.resourceGroup }} -w ${{ parameters.workspaceName }}) ]]; then
            if [[ "${{ parameters.deployment }}" == "" ]]; then
              echo "##[debug]Querying champion version from endpoint with name $ENDPOINT_NAME"
              CHAMPION_MODEL=$(az ml online-deployment list --endpoint-name $ENDPOINT_NAME -g ${{ parameters.resourceGroup }} -w ${{ parameters.workspaceName }} | jq -r ".[].model")
            else
              echo "##[debug]Querying champion version from endpoint/deployment with name $ENDPOINT_NAME/${{ parameters.deployment }}"
              CHAMPION_MODEL=$(az ml online-deployment show --endpoint-name $ENDPOINT_NAME --name ${{ parameters.deployment }} -g ${{ parameters.resourceGroup }} -w ${{ parameters.workspaceName }} | jq -r ".[].model")
            fi
          fi
          if [[ $CHAMPION_MODEL ]]; then
            CHAMPION=$(basename $CHAMPION_MODEL)
          else
            echo "##vso[task.logissue type=warning;]There are no models deployed at endpoint $ENDPOINT_NAME. Model will be deployed without compare."
            echo "##vso[task.setvariable variable=result;isOutput=true]true"
            exit 0
          fi
        else
          CHAMPION=${{ parameters.champion }}
        fi
        echo "##[debug]CHAMPION is version:$CHAMPION"

        echo "##[debug]Comparing models by ${{ parameters.compareBy }}"

        SUBSCRIPTION_ID=$(az account show | jq -r ".id")

        COMPARE=$(python $(Build.SourcesDirectory)/.azure-pipelines/templates/aml-model-compare/compare.py \
          --subscription-id $SUBSCRIPTION_ID \
          --workspace-name ${{ parameters.workspaceName }} \
          --resource-group ${{ parameters.resourceGroup }} \
          --model-name ${{ parameters.modelName }} \
          --champion ${{ parameters.champion }} \
          --challenger ${{ parameters.challenger }} \
          --compare-by ${{ parameters.compareBy }} \
          --greater-is-better ${{ parameters.greaterIsBetter }})

        # compare.py will return true or false depending if challenger is better. false is encoded as 0 en bash and any other value is true.
        if ${COMPARE,,} ; then
          echo "##vso[task.logissue type=warning;]Challenger model won the compare."

          WINNING=$(python $(Build.SourcesDirectory)/.azure-pipelines/templates/aml-model-compare/model_version.py \
            --subscription-id $SUBSCRIPTION_ID \
            --workspace-name ${{ parameters.workspaceName }} \
            --resource-group ${{ parameters.resourceGroup }} \
            --model-name ${{ parameters.modelName }} \
            --version ${{ parameters.challenger }})

          echo "##[debug]Challenger version is $WINNING."
          echo "##vso[task.setvariable variable=result;isOutput=true]true"
          echo "##vso[task.setvariable variable=winning;isOutput=true]$WINNING"
        else
          echo "##vso[task.logissue type=warning;]Challenger model is not better than the current champion."
          echo "##vso[task.setvariable variable=result;isOutput=true]false"
        fi
    target:
      settableVariables:
      - result
      - winning